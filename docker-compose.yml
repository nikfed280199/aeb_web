version: '3.8'

services:
  web-server:
    build:
      context: ./WebServer
      dockerfile: Dockerfile
    container_name: web-server
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:80
      ConnectionStrings__DefaultConnection: Host=postgres-db;Port=5432;Username=user;Password=password;Database=messages
    ports:
      - "5000:80"
    depends_on:
      - postgres-db
    networks:
      - app-network

  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: messages
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  client-sender:
    build:
      context: ./ClientSender
      dockerfile: Dockerfile
    container_name: client-sender
    restart: always
    environment:
      ASPNETCORE_URLS: http://+:80
    ports:
      - "5001:80"
    depends_on:
      - web-server
    networks:
      - app-network

  client-viewer:
    build:
      context: ./ClientViewer
      dockerfile: Dockerfile
    container_name: client-viewer
    restart: always
    environment:
      ASPNETCORE_URLS: http://+:80
      WEBSOCKET_URL: ws://localhost:5000/ws/messages
    ports:
      - "5002:80"
    depends_on:
      - web-server
    networks:
      - app-network

  client-history:
    build:
      context: ./ClientHistory
      dockerfile: Dockerfile
    container_name: client-history
    restart: always
    environment:
      ASPNETCORE_URLS: http://+:80
    ports:
      - "5003:80"
    depends_on:
      - web-server
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
